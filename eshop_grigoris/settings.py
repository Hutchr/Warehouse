"""
Django settings for eshop_grigoris project.

Generated by 'django-admin startproject' using Django 1.9.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
import os.path
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

HEROKU_APP = False
AMAZON_APP = False

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '3rol1y3ig7=nl_l2)hs(bd805e0ryon*k(u-1y@b%+-tr@nstx'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


ALLOWED_HOSTS = ['christos-test-site.herokuapp.com', '127.0.0.1']


EMAIL_BACKEND='django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST='smtp.gmail.com'
EMAIL_PORT=587
EMAIL_HOST_USER = 'christosstath10@gmail.com'
EMAIL_HOST_PASSWORD = 'bozas1993'
EMAIL_USE_TLS=True


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.sitemaps',

    #third parties
    'smartfields',
    'import_export',
    'rest_framework',

    #mine
    'products',
    'account',
    'inventory_manager',
    'transcations',
    'PoS',
    'reports',
    'mysite',
    'tools',
    'cart',
    'blog',
    'comment',
    'newsletter',
]

SITE_ID = 1
MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'eshop_grigoris.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates'),os.path.join(BASE_DIR, 'inventory_manager/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'eshop_grigoris.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases


CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'my_cache_table',
    }
}
if HEROKU_APP:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'd3goacbmrivalg',
            'USER':'ptlcoeyvqwdbnd',
            'PASSWORD':'f71563820e63e0ae89742700cb4d2ca4e2b93cd67442ffab833508d57daeb414',
            'HOST':'ec2-174-129-223-193.compute-1.amazonaws.com',
            'PORT':'5432',
        }
    }
else:
    DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
    }



# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/



if HEROKU_APP:
    STATIC_ROOT = 'static/'
    STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'
    STATIC_URL = '/static/'
else:
    STATIC_URL = '/static/'
    STATIC_FILES_DIRS =[os.path.join(BASE_DIR,'static'),]
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')

if AMAZON_APP:
    AWS_REGION = 'eu-west-2'
    S3_USE_SIGV4= True
    AWS_S3_HOST = "s3.eu-west-2.amazonaws"

    AWS_STORAGE_BUCKET_NAME = 'monastiraki'
    AWS_ACCESS_KEY_ID = 'AKIAIFK4DXC6DY75ELGQ'
    AWS_SECRET_ACCESS_KEY = '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'

        # Tell django-storages that when coming up with the URL for an item in S3 storage, keep
        # it simple - just use this domain plus the path. (If this isn't set, things get complicated).
        # This controls how the `static` template tag from `staticfiles` gets expanded, if you're using it.
        # We also use it in the next setting.
    AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME

        # This is used by the `static` template tag from `static`, if you're using that. Or if anything else
        # refers directly to STATIC_URL. So it's safest to always set it.


        # Tell the staticfiles app to use S3Boto storage when writing the collected static files (when

    from storages.backends.s3boto import S3BotoStorage
    DEFAULT_FILE_STORAGE = 'custom_storages.MediaStorage'

    MEDIAFILES_LOCATION = 'media'
    MEDIA_URL = '/media/'
    #MEDIA_URL = 'https://s3.%s.amazonaws.com/%s/media/' % (AWS_REGION, AWS_STORAGE_BUCKET_NAME)

    MEDIA = '/media/'
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media_cdn')
else:
    MEDIA_URL = '/media/'
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media_cdn')

#costum modules

IMPORT_EXPORT_USE_TRANSACTIONS = True
